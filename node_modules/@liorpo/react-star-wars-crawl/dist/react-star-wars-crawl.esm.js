import React from 'react';

function _extends() {
  _extends = Object.assign || function (target) {
    for (var i = 1; i < arguments.length; i++) {
      var source = arguments[i];

      for (var key in source) {
        if (Object.prototype.hasOwnProperty.call(source, key)) {
          target[key] = source[key];
        }
      }
    }

    return target;
  };

  return _extends.apply(this, arguments);
}

function styleInject(css, ref) {
  if ( ref === void 0 ) ref = {};
  var insertAt = ref.insertAt;

  if (!css || typeof document === 'undefined') { return; }

  var head = document.head || document.getElementsByTagName('head')[0];
  var style = document.createElement('style');
  style.type = 'text/css';

  if (insertAt === 'top') {
    if (head.firstChild) {
      head.insertBefore(style, head.firstChild);
    } else {
      head.appendChild(style);
    }
  } else {
    head.appendChild(style);
  }

  if (style.styleSheet) {
    style.styleSheet.cssText = css;
  } else {
    style.appendChild(document.createTextNode(css));
  }
}

var css_248z = "@-webkit-keyframes index_crawl__pXTqq{0%{top:0;transform:rotateX(20deg) translateZ(0)}to{top:-6000px;transform:rotateX(25deg) translateZ(-2500px)}}@keyframes index_crawl__pXTqq{0%{top:0;transform:rotateX(20deg) translateZ(0)}to{top:-6000px;transform:rotateX(25deg) translateZ(-2500px)}}";
var animationStyles = {"crawl":"index_crawl__pXTqq"};
styleInject(css_248z);

var styles = {
  container: {
    width: '100%',
    height: '100%',
    background: '#000',
    overflow: 'hidden'
  },
  fade: {
    position: 'relative',
    width: '100%',
    minHeight: '60vh',
    top: '-25px',
    backgroundImage: 'linear-gradient(0deg, transparent, black 75%)',
    zIndex: 1
  },
  textContainer: {
    display: 'flex',
    justifyContent: 'center',
    position: 'relative',
    height: '800px',
    color: '#feda4a',
    fontFamily: "'Pathway Gothic One', sans-serif",
    fontSize: '500%',
    fontWeight: '600',
    letterSpacing: '6px',
    lineHeight: '150%',
    perspective: '400px',
    textAlign: 'justify'
  },
  crawl: {
    position: 'relative',
    top: '9999px',
    transformOrigin: '50% 100%',
    animation: animationStyles.crawl + " 60s linear"
  },
  title: {
    fontSize: '90%',
    textAlign: 'center'
  },
  subTitle: {
    margin: '0 0 100px',
    textTransform: 'uppercase'
  }
};

var Crawl = function Crawl(_ref) {
  var children = _ref.children,
      containerStyles = _ref.containerStyles,
      fadeStyles = _ref.fadeStyles,
      textContainerStyles = _ref.textContainerStyles,
      crawlStyles = _ref.crawlStyles,
      titleStyles = _ref.titleStyles,
      subTitleStyles = _ref.subTitleStyles,
      textStyles = _ref.textStyles,
      title = _ref.title,
      subTitle = _ref.subTitle,
      text = _ref.text,
      _ref$speed = _ref.speed,
      speed = _ref$speed === void 0 ? 60 : _ref$speed;
  return React.createElement("div", {
    className: "crawler",
    style: _extends({}, styles.container, containerStyles)
  }, React.createElement("div", {
    style: _extends({}, styles.fade, fadeStyles)
  }), React.createElement("section", {
    style: _extends({}, styles.textContainer, textContainerStyles)
  }, React.createElement("div", {
    style: _extends({}, styles.crawl, crawlStyles, {
      animation: animationStyles.crawl + " " + speed + "s linear"
    })
  }, React.createElement("div", {
    style: _extends({}, styles.title, titleStyles)
  }, React.createElement("p", {
    className: "title"
  }, title), React.createElement("h1", {
    className: "subTitle",
    style: _extends({}, styles.subTitle, subTitleStyles)
  }, subTitle)), React.createElement("p", {
    className: "text",
    style: textStyles
  }, text), children)));
};

export default Crawl;
//# sourceMappingURL=react-star-wars-crawl.esm.js.map
