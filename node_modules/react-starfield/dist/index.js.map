{"version":3,"sources":["../index.ts","../src/Starfield.tsx"],"sourcesContent":["import Starfield from \"@/Starfield\";\r\n\r\nexport default Starfield;\r\n","'use client';\r\n\r\nimport React, { useEffect } from 'react';\r\n\r\ninterface Props {\r\n\tspeedFactor?: number;\r\n\tbackgroundColor?: string;\r\n\tstarColor?: [number, number, number];\r\n\tstarCount?: number;\r\n}\r\n\r\nexport default function Starfield(props: Props) {\r\n\tconst { speedFactor = 0.05, backgroundColor = 'black', starColor = [255, 255, 255], starCount = 5000 } = props;\r\n\r\n\tuseEffect(() => {\r\n\t\tconst canvas = document.getElementById('starfield') as HTMLCanvasElement;\r\n\r\n\t\tif (canvas) {\r\n\t\t\tconst c = canvas.getContext('2d');\r\n\r\n\t\t\tif (c) {\r\n\t\t\t\tlet w = window.innerWidth;\r\n\t\t\t\tlet h = window.innerHeight;\r\n\r\n\t\t\t\tconst setCanvasExtents = () => {\r\n\t\t\t\t\tcanvas.width = w;\r\n\t\t\t\t\tcanvas.height = h;\r\n\t\t\t\t};\r\n\r\n\t\t\t\tsetCanvasExtents();\r\n\r\n\t\t\t\twindow.onresize = () => {\r\n\t\t\t\t\tsetCanvasExtents();\r\n\t\t\t\t};\r\n\r\n\t\t\t\tconst makeStars = (count: number) => {\r\n\t\t\t\t\tconst out = [];\r\n\t\t\t\t\tfor (let i = 0; i < count; i++) {\r\n\t\t\t\t\t\tconst s = {\r\n\t\t\t\t\t\t\tx: Math.random() * 1600 - 800,\r\n\t\t\t\t\t\t\ty: Math.random() * 900 - 450,\r\n\t\t\t\t\t\t\tz: Math.random() * 1000,\r\n\t\t\t\t\t\t};\r\n\t\t\t\t\t\tout.push(s);\r\n\t\t\t\t\t}\r\n\t\t\t\t\treturn out;\r\n\t\t\t\t};\r\n\r\n\t\t\t\tlet stars = makeStars(starCount);\r\n\r\n\t\t\t\tconst clear = () => {\r\n\t\t\t\t\tc.fillStyle = backgroundColor;\r\n\t\t\t\t\tc.fillRect(0, 0, canvas.width, canvas.height);\r\n\t\t\t\t};\r\n\r\n\t\t\t\tconst putPixel = (x: number, y: number, brightness: number) => {\r\n\t\t\t\t\tconst rgb =\r\n\t\t\t\t\t\t'rgba(' + starColor[0] + ',' + starColor[1] + ',' + starColor[2] + ',' + brightness + ')';\r\n\t\t\t\t\tc.fillStyle = rgb;\r\n\t\t\t\t\tc.fillRect(x, y, 1, 1);\r\n\t\t\t\t};\r\n\r\n\t\t\t\tconst moveStars = (distance: number) => {\r\n\t\t\t\t\tconst count = stars.length;\r\n\t\t\t\t\tfor (var i = 0; i < count; i++) {\r\n\t\t\t\t\t\tconst s = stars[i];\r\n\t\t\t\t\t\ts.z -= distance;\r\n\t\t\t\t\t\twhile (s.z <= 1) {\r\n\t\t\t\t\t\t\ts.z += 1000;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t};\r\n\r\n\t\t\t\tlet prevTime: number;\r\n\t\t\t\tconst init = (time: number) => {\r\n\t\t\t\t\tprevTime = time;\r\n\t\t\t\t\trequestAnimationFrame(tick);\r\n\t\t\t\t};\r\n\r\n\t\t\t\tconst tick = (time: number) => {\r\n\t\t\t\t\tlet elapsed = time - prevTime;\r\n\t\t\t\t\tprevTime = time;\r\n\r\n\t\t\t\t\tmoveStars(elapsed * speedFactor);\r\n\r\n\t\t\t\t\tclear();\r\n\r\n\t\t\t\t\tconst cx = w / 2;\r\n\t\t\t\t\tconst cy = h / 2;\r\n\r\n\t\t\t\t\tconst count = stars.length;\r\n\t\t\t\t\tfor (var i = 0; i < count; i++) {\r\n\t\t\t\t\t\tconst star = stars[i];\r\n\r\n\t\t\t\t\t\tconst x = cx + star.x / (star.z * 0.001);\r\n\t\t\t\t\t\tconst y = cy + star.y / (star.z * 0.001);\r\n\r\n\t\t\t\t\t\tif (x < 0 || x >= w || y < 0 || y >= h) {\r\n\t\t\t\t\t\t\tcontinue;\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\tconst d = star.z / 1000.0;\r\n\t\t\t\t\t\tconst b = 1 - d * d;\r\n\r\n\t\t\t\t\t\tputPixel(x, y, b);\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\trequestAnimationFrame(tick);\r\n\t\t\t\t};\r\n\r\n\t\t\t\trequestAnimationFrame(init);\r\n\r\n\t\t\t\t// add window resize listener:\r\n\t\t\t\twindow.addEventListener('resize', function () {\r\n\t\t\t\t\tw = window.innerWidth;\r\n\t\t\t\t\th = window.innerHeight;\r\n\t\t\t\t\tsetCanvasExtents();\r\n\t\t\t\t});\r\n\t\t\t} else {\r\n\t\t\t\tconsole.error('Could not get 2d context from canvas element');\r\n\t\t\t}\r\n\t\t} else {\r\n\t\t\tconsole.error('Could not find canvas element with id \"starfield\"');\r\n\t\t}\r\n\r\n\t\treturn () => {\r\n\t\t\twindow.onresize = null;\r\n\t\t};\r\n\t}, [starColor, backgroundColor, speedFactor, starCount]);\r\n\r\n\treturn (\r\n\t\t<canvas\r\n\t\t\tid=\"starfield\"\r\n\t\t\tstyle={{\r\n\t\t\t\tpadding: 0,\r\n\t\t\t\tmargin: 0,\r\n\t\t\t\tposition: 'fixed',\r\n\t\t\t\ttop: 0,\r\n\t\t\t\tright: 0,\r\n\t\t\t\tbottom: 0,\r\n\t\t\t\tleft: 0,\r\n\t\t\t\tzIndex: 10,\r\n\t\t\t\topacity: 1,\r\n\t\t\t\tpointerEvents: 'none',\r\n\t\t\t\tmixBlendMode: 'screen',\r\n\t\t\t}}\r\n\t\t></canvas>\r\n\t);\r\n}\r\n"],"mappings":"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","names":["react_starfield_exports","__export","react_starfield_default","__toCommonJS","import_react","import_jsx_runtime","Starfield","props","speedFactor","backgroundColor","starColor","starCount","canvas","c","w","h","setCanvasExtents","__name","stars","count","out","i","s","clear","putPixel","x","y","brightness","rgb","moveStars","distance","prevTime","init","time","tick","elapsed","cx","cy","star","d","b","react_starfield_default","Starfield"]}